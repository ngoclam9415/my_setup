version: '2.3'
services:
  keydb:
    image: eqalpha/keydb
    restart: always
    container_name: keydb
    ports:
      - "6379:6379"
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    entrypoint: ["keydb-server", "--server-threads", "4", "--requirepass", "123123123", "--appendonly", "yes"]
    volumes:
      - ./keydb:/data
    networks:
      - data-tier

  postgresql:
    image: timescale/timescaledb-postgis:1.7.3-pg9.6
    restart: always
    shm_size: 1g
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "123123123"
    volumes:
      - ./psql:/var/lib/postgresql/data
    networks:
      - data-tier

  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    networks:
      - data-tier

  kafka:
    image: wurstmeister/kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    expose:
      - "9092"
    container_name: kafka
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.122
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://192.168.1.122:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: EXTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_MINUTES: 360
      KAFKA_LOG_SEGMENT_BYTES: 107374182
      KAFKA_NUM_PARTITIONS: 8
    networks:
      - data-tier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    
  # pgadmin:
  #   image: thajeztah/pgadmin4
  #   container_name: pgadmin
  #   ports:
  #     - 5050:5050
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   networks:
  #     - data-tier

  # mongo:
  #   image: mongo
  #   container_name: mongo
  #   restart: always
  #   ports:
  #     - "27017-27019:27017-27019"
  #   environment:
  #     TZ: "Asia/Ho_Chi_Minh"
  #     MONGO_INITDB_ROOT_USERNAME: "admin"
  #     MONGO_INITDB_ROOT_PASSWORD: "123123123"
  #     MONGO_INITDB_DATABASE: "vietquant"
  #   volumes: 
  #     - ./mongo/db:/data/db
  #     - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #   networks:
  #     - data-tier

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: elasticsearch
    restart: always
    ports:
      - 9200:9200
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_USERNAME: admin
      ELASTIC_PASSWORD: 123123123
      node.name: es01
      http.host: 0.0.0.0
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      cluster.name: es-docker-cluster
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      cluster.routing.allocation.disk.threshold_enabled: "true"
      cluster.routing.allocation.disk.watermark.flood_stage: 200mb
      cluster.routing.allocation.disk.watermark.low: 500mb
      cluster.routing.allocation.disk.watermark.high: 300mb
      xpack.license.self_generated.type: basic
      xpack.security.enabled: "false"
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - data-tier

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.1
    container_name: kibana
    restart: always
    ports:
      - 5601:5601
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: admin
      ELASTICSEARCH_PASSWORD: "\"123123123\""
    networks:
      - data-tier

  # oracle:
  #   image: quay.io/maksymbilenko/oracle-12c
  #   container_name: oracle
  #   restart: always
  #   ports:
  #     - 1521:1521
  #     - 8080:8080
  #   environment:
  #     TZ: Asia/Ho_Chi_Minh
  #     DBCA_TOTAL_MEMORY: 1024
  #   volumes:
  #     - ./oracle:/u01/app/oracle
  #   networks:
  #     - data-tier

networks:
  data-tier:
    external: true
